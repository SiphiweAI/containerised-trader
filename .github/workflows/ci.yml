name: CI & CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Required secrets
  API_KEY: ${{ secrets.API_KEY }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }} # Fly.io API token

jobs:
  # --- Unit + Integration tests ---
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - run: pip install -r requirements.txt psycopg2-binary redis pytest
      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -U testuser; do
            echo "Waiting for Postgres..."
            sleep 2
          done
      - name: Initialize test DB
        run: |
          psql -h localhost -U testuser -d testdb -c "CREATE TABLE trades (id SERIAL PRIMARY KEY, time TIMESTAMP, pair TEXT, verdict TEXT, entry_price FLOAT, pnl FLOAT);"
        env:
          PGPASSWORD: testpass
      - run: pytest -v tests

  # --- Docker Build + Push ---
  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository }}:latest

  # --- Deploy to Fly.io ---
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - uses: actions/checkout@v4

      - name: Install Fly CLI
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "::add-path::${HOME}/.fly/bin"

      - name: Authenticate Fly CLI
        run: fly auth token ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy to Fly
        run: fly deploy --remote-only --image ghcr.io/${{ github.repository }}:latest
